{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ademc\\\\cyber_centrleye\\\\centrleye-07-03-23\\\\src\\\\pages\\\\TokenContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport jwtDecode from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TokenContext = /*#__PURE__*/createContext();\nexport const TokenProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [token, setToken] = useState('');\n  const [user, setUser] = useState('');\n  const [loggedIn, setLoggedIn] = useState('');\n  const updateToken = newToken => {\n    setToken(newToken);\n  };\n  const updateUser = newUser => {\n    setUser(newUser);\n  };\n\n  // page refresher \n  useEffect(() => {\n    const storedToken = localStorage.getItem('token');\n    if (token === '') {\n      // ifthe user is using it shouldnt change anything here \n      if (storedToken !== '') updateToken(storedToken);\n    }\n  }, []);\n  useEffect(() => {\n    if (token !== '') {\n      console.log(\"we in here\");\n      console.log(token);\n      try {\n        const decodedToken = jwtDecode(token);\n        setUser(decodedToken);\n        setLoggedIn(true);\n        console.log(\"user has been refreshed but it works\");\n        console.log(user);\n        console.log(\"user has been refreshed but it works ???\");\n      } catch (error) {\n        // Handle decoding errors here\n        console.error('Error decoding token:', error);\n        setUser(null);\n      }\n    } else {\n      setUser(null);\n    }\n  }, [token]);\n\n  //const  [storedToken, strdToken] = useState(localStorage.getItem('token'));\n\n  return /*#__PURE__*/_jsxDEV(TokenContext.Provider, {\n    value: {\n      token,\n      updateToken,\n      user,\n      updateUser,\n      loggedIn,\n      setLoggedIn\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(TokenProvider, \"/fwBvTl78zCKFoV3UpCIf83SUfU=\");\n_c = TokenProvider;\nexport default TokenContext;\nvar _c;\n$RefreshReg$(_c, \"TokenProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jwtDecode","jsxDEV","_jsxDEV","TokenContext","TokenProvider","_ref","_s","children","token","setToken","user","setUser","loggedIn","setLoggedIn","updateToken","newToken","updateUser","newUser","storedToken","localStorage","getItem","console","log","decodedToken","error","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ademc/cyber_centrleye/centrleye-07-03-23/src/pages/TokenContext.js"],"sourcesContent":["import React, { createContext, useState , useEffect } from 'react';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nconst TokenContext = createContext();\r\n\r\nexport const TokenProvider = ({ children }) => {\r\n  const [token, setToken] = useState('');\r\n  const [user, setUser] = useState('');\r\n  const [loggedIn, setLoggedIn] = useState('');\r\n\r\n  const updateToken = (newToken) => {\r\n    setToken(newToken);\r\n  };\r\n\r\n  const updateUser = (newUser) => {\r\n    setUser(newUser);\r\n  };\r\n\r\n  \r\n\r\n  // page refresher \r\n  useEffect(() => {\r\n    const storedToken = localStorage.getItem('token');\r\n\r\n    if (token === '' ){ // ifthe user is using it shouldnt change anything here \r\n    if (storedToken !== '')\r\n    updateToken(storedToken);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    \r\n    if (token !== '') {\r\n      console.log(\"we in here\");\r\n      console.log(token);\r\n\r\n      try {\r\n        const decodedToken = jwtDecode(token);\r\n        setUser(decodedToken);\r\n\r\n        setLoggedIn(true);\r\n        console.log(\"user has been refreshed but it works\");\r\n        console.log(user);\r\n        console.log(\"user has been refreshed but it works ???\");\r\n      } catch (error) {\r\n        // Handle decoding errors here\r\n        console.error('Error decoding token:', error);\r\n        setUser(null);\r\n      }\r\n    } else {\r\n      setUser(null);\r\n    }\r\n  }, [token]);\r\n\r\n  //const  [storedToken, strdToken] = useState(localStorage.getItem('token'));\r\n\r\n  return (\r\n    <TokenContext.Provider value={{ token, updateToken, user, updateUser, loggedIn, setLoggedIn }}>\r\n      {children}\r\n    </TokenContext.Provider>\r\n  );\r\n};\r\n\r\nexport default TokenContext;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAGC,SAAS,QAAQ,OAAO;AAClE,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMO,aAAa,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACxC,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMgB,WAAW,GAAIC,QAAQ,IAAK;IAChCN,QAAQ,CAACM,QAAQ,CAAC;EACpB,CAAC;EAED,MAAMC,UAAU,GAAIC,OAAO,IAAK;IAC9BN,OAAO,CAACM,OAAO,CAAC;EAClB,CAAC;;EAID;EACAlB,SAAS,CAAC,MAAM;IACd,MAAMmB,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAEjD,IAAIZ,KAAK,KAAK,EAAE,EAAE;MAAE;MACpB,IAAIU,WAAW,KAAK,EAAE,EACtBJ,WAAW,CAACI,WAAW,CAAC;IACxB;EACF,CAAC,EAAE,EAAE,CAAC;EAENnB,SAAS,CAAC,MAAM;IAEd,IAAIS,KAAK,KAAK,EAAE,EAAE;MAChBa,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;MACzBD,OAAO,CAACC,GAAG,CAACd,KAAK,CAAC;MAElB,IAAI;QACF,MAAMe,YAAY,GAAGvB,SAAS,CAACQ,KAAK,CAAC;QACrCG,OAAO,CAACY,YAAY,CAAC;QAErBV,WAAW,CAAC,IAAI,CAAC;QACjBQ,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;QACnDD,OAAO,CAACC,GAAG,CAACZ,IAAI,CAAC;QACjBW,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAC;MACzD,CAAC,CAAC,OAAOE,KAAK,EAAE;QACd;QACAH,OAAO,CAACG,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7Cb,OAAO,CAAC,IAAI,CAAC;MACf;IACF,CAAC,MAAM;MACLA,OAAO,CAAC,IAAI,CAAC;IACf;EACF,CAAC,EAAE,CAACH,KAAK,CAAC,CAAC;;EAEX;;EAEA,oBACEN,OAAA,CAACC,YAAY,CAACsB,QAAQ;IAACC,KAAK,EAAE;MAAElB,KAAK;MAAEM,WAAW;MAAEJ,IAAI;MAAEM,UAAU;MAAEJ,QAAQ;MAAEC;IAAY,CAAE;IAAAN,QAAA,EAC3FA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACxB,EAAA,CAxDWF,aAAa;AAAA2B,EAAA,GAAb3B,aAAa;AA0D1B,eAAeD,YAAY;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}